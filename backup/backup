#!/usr/bin/env bash

## Backup all volumes of data used by Naomi, namely:
## db data, redis data, uploaded files, prerun files and results
set -e

SCRIPT_DIR="$(
    cd -- "$(dirname "$0")" >/dev/null 2>&1
    pwd -P
)"
NOW=$(date +'%Y_%d_%m-%H_%M_%S')
BACKUP_PATH="$SCRIPT_DIR/$NOW.tar"
BACKUP_WORKING_DIR="$SCRIPT_DIR/working"
mkdir $BACKUP_WORKING_DIR

clean_up() {
    local lineno=$1
    local msg=$2
    echo "Backup failed at $lineno: $msg"
    rm -rf $BACKUP_WORKING_DIR
    exit 1
}
trap 'clean_up ${LINENO} "$BASH_COMMAND"' ERR

docker exec hint_db pg_dumpall -U postgres >$BACKUP_WORKING_DIR/db_dump.sql
docker exec hint_redis redis-cli BGSAVE
waiting=0
wait_time=0
while [ $waiting -eq 0 ]; do
    sleep 2
    wait_time=$(($wait_time + 2))
    echo "Polling redis for backup complete, waited $wait_time seconds"
    docker exec hint_redis /bin/bash -c "redis-cli INFO PERSISTENCE | grep -q \"rdb_bgsave_in_progress:1\"" || waiting=$?
done
echo "Redis backup complete"
docker cp hint_redis:/data/dump.rdb $BACKUP_WORKING_DIR
docker run --rm --volumes-from hint_hintr -v $BACKUP_WORKING_DIR:/backup busybox tar -cf /backup/prerun_backup.tar -C /prerun .
docker run --rm --volumes-from hint_hintr -v $BACKUP_WORKING_DIR:/backup busybox tar -cf /backup/results_backup.tar -C /results .
docker run --rm --volumes-from hint_hintr -v $BACKUP_WORKING_DIR:/backup busybox tar -cf /backup/uploads_backup.tar -C /uploads .
find $BACKUP_WORKING_DIR -type f -exec md5sum "{}" + >$BACKUP_WORKING_DIR/checklist.chk

tar -cf $BACKUP_PATH -C $BACKUP_WORKING_DIR .
echo "Backup complete, saved at $BACKUP_PATH"
rm -rf $BACKUP_WORKING_DIR
