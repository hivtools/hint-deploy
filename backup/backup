#!/usr/bin/env bash

## Backup all volumes of data used by Naomi, namely:
## db data, redis data, uploaded files, prerun files and results
set -e

SCRIPT_DIR="$(
    cd -- "$(dirname "$0")" >/dev/null 2>&1
    pwd -P
)"
NOW=$(date +'%Y_%d_%m-%H_%M_%S')
BACKUP_PATH="$SCRIPT_DIR/$NOW.tar"
BACKUP_WORKING_DIR="$SCRIPT_DIR/working"
mkdir $BACKUP_WORKING_DIR

clean_up() {
    local lineno=$1
    local msg=$2
    echo "Backup failed at $lineno: $msg"
    rm -rf $BACKUP_WORKING_DIR
    exit 1
}
trap 'clean_up ${LINENO} "$BASH_COMMAND"' ERR

docker exec hint_db pg_dumpall -U postgres >$BACKUP_WORKING_DIR/db_dump.sql
docker run --rm --volumes-from hint_redis -v $BACKUP_WORKING_DIR:/backup busybox tar -cf /backup/redis_backup.tar -C /data .
docker run --rm --volumes-from hint_hintr -v $BACKUP_WORKING_DIR:/backup busybox tar -cf /backup/prerun_backup.tar -C /prerun .
docker run --rm --volumes-from hint_hintr -v $BACKUP_WORKING_DIR:/backup busybox tar -cf /backup/results_backup.tar -C /results .
docker run --rm --volumes-from hint_hintr -v $BACKUP_WORKING_DIR:/backup busybox tar -cf /backup/uploads_backup.tar -C /uploads .
find $BACKUP_WORKING_DIR -type f \( -not -name "checklist.chk" \) -exec md5sum "{}" + >$BACKUP_WORKING_DIR/checklist.chk

vault_path="secret/hint/$HOSTNAME/cipher"
echo "Do you want to backup private & public keys to secure ADR keys to vault?"
echo "!!This will overwrite an existing entry at this path in vault!!"
echo "You do not need to do this if you plan to restore to the same server, but if you want to load the backup onto"
echo "another server and have the user entered ADR keys still work then you need backup these keys"
read -p "Backup keys?" -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    vault login -method=github
    public_key=$(docker run --rm --volumes-from hint_hint busybox cat /etc/hint/token_key/public_key.der)
    private_key=$(docker run --rm --volumes-from hint_hint busybox cat /etc/hint/token_key/private_key.der)
    vault write $vault_path public=$public_key private=$private_key
fi

tar -cf $BACKUP_PATH -C $BACKUP_WORKING_DIR .
echo "Backup complete, saved at $BACKUP_PATH"
rm -rf $BACKUP_WORKING_DIR
